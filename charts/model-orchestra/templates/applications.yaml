{{- range $appName, $baseValues := .Values.applications }}
  {{- $mergedValues := merge $baseValues (deepCopy $.Values.applicationTemplate) }}

  {{/* Set the required env vars needed for each application deployment */}}
  {{- $requiredEnv := dict }}
  {{- $_ := set $requiredEnv "TAKEOFF_ADD_READER_ID_SUFFIX" (dict "value" "true") }}

  {{/* Convert user set env vars into dict */}}
  {{- $userEnv := dict }}
  {{- range $envMap := $mergedValues.env }}
  {{- if hasKey $envMap "value" }}
      {{- $_ := set $userEnv $envMap.name (dict "value" $envMap.value) }}
  {{ else if hasKey $envMap "valueFrom" }}
      {{- $_ := set $userEnv $envMap.name (dict "valueFrom" $envMap.valueFrom) }}
  {{- end }}
  {{- end }}

  {{/* Define the list to hold the env */}}
  {{- $applicationEnv := list }}
  {{/* Merge the template env with user env. Lets users overwrite default values. */}}
  {{- $applicationEnvDict := merge $requiredEnv $userEnv }}

  {{/* Loop through the merged env and append to the list */}}
  {{- range $key, $value := $applicationEnvDict }}
      {{- if $value.value }}
          {{- $applicationEnv = append $applicationEnv (dict "name" $key "value" $value.value) }}
      {{- else if $value.valueFrom }}
          {{- $applicationEnv = append $applicationEnv (dict "name" $key "valueFrom" $value.valueFrom) }}
      {{- end }}
  {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "takeoff.fullname" $ }}-{{ $appName }}
  labels:
    app.kubernetes.io/component: application-{{ $appName }}
    {{- include "takeoff.labels" $ | nindent 4 }}
data:
  config.yaml: |
    takeoff:
      server_config:
        internal_port: 3005
      readers_config:
        {{ $appName }}:
          {{- $readerConfigTemplate := printf `
          internalGatewayIp: %s-gateway
          ` (include "takeoff.fullname" $) }}
          {{- $templateReaderConfig := fromYaml $readerConfigTemplate }}
          {{- $finalReadersConfig := merge $mergedValues.readerConfig $templateReaderConfig }}
          {{- range $key, $value := $finalReadersConfig }}
          {{ snakecase $key}}: {{$value}}
          {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "takeoff.fullname" $ }}-{{ $appName }}
  labels:
    app.kubernetes.io/component: application-{{ $appName }}
    {{- include "takeoff.labels" $ | nindent 4 }}
spec:
  {{- if not $mergedValues.scaling.enabled }}
  replicas: {{ $mergedValues.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/component: application-{{ $appName }}
      {{- include "takeoff.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      {{- with $mergedValues.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/component: application-{{ $appName }}
        {{- include "takeoff.labels" $ | nindent 8 }}
        {{- with $mergedValues.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "takeoff.serviceAccountName" $ }}
      {{- with $mergedValues.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "takeoff.fullname" $ }}-{{ $appName }}
          {{- with $mergedValues.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ $mergedValues.image.repository }}:{{ $mergedValues.image.tag | default (print $.Chart.AppVersion "-gpu") }}"
          imagePullPolicy: {{ $mergedValues.image.pullPolicy }}
          env:
            {{ $applicationEnv | toYaml | nindent 12 }}
          {{- with $mergedValues.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $mergedValues.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $mergedValues.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $mergedValues.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /code/config.yaml
              subPath: config.yaml
            - name: dshm
              mountPath: /dev/shm
          {{- with $mergedValues.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "takeoff.fullname" $ }}-{{ $appName }}
        - name: dshm
          emptyDir:
            medium: Memory
      {{- with $mergedValues.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $mergedValues.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $mergedValues.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $mergedValues.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "takeoff.fullname" $ }}-{{ $appName }}
  labels:
    app.kubernetes.io/component: application-{{ $appName }}
    {{- include "takeoff.labels" $ | nindent 4 }}
spec:
  type: {{ $mergedValues.service.type }}
  {{- with $mergedValues.service.ports }}
  ports:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    app.kubernetes.io/component: application-{{ $appName }}
    {{- include "takeoff.selectorLabels" $ | nindent 4 }}
---
{{- if $mergedValues.ingress.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "takeoff.fullname" $ }}-{{ $appName }}
  labels:
    app.kubernetes.io/component: application-{{ $appName }}
    {{- include "takeoff.labels" $ | nindent 4 }}
  {{- with $mergedValues.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with $mergedValues.ingress.className }}
  ingressClassName: {{ . }}
  {{- end }}
  {{- if $mergedValues.ingress.tls }}
  tls:
    {{- range $mergedValues.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range $mergedValues.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- with .pathType }}
            pathType: {{ . }}
            {{- end }}
            backend:
              service:
                name: {{ include "takeoff.fullname" $ }}-{{ $appName }}
                port:
                  number: {{ $mergedValues.service.port }}
          {{- end }}
    {{- end }}
---
{{- end }}
{{- if $mergedValues.scaling.enabled }}
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: {{ include "takeoff.fullname" $ }}-{{ $appName }}
  {{- with $mergedValues.scaling.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}

{{- $scaledObjectTemplate := printf `
scaleTargetRef:
  apiVersion: apps/v1
  kind: Deployment
  name: %s-%s
` (include "takeoff.fullname" $) $appName }}
{{- $templateScalingSpec := fromYaml $scaledObjectTemplate }}
{{- $finalScalingSpec := merge $mergedValues.scaling.spec $templateScalingSpec }}
spec:
  {{- toYaml $finalScalingSpec | nindent 2 }}
---
{{- end }}
{{- end }}  # End range over applications
