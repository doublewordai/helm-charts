# Default values for catalog.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
# The following sections create the role and roleBinding for the service account to edit the custom resources. If you enable 
# roleBinding you must enable role or it will not deploy.

# This section is for the cluster catalog that houses operator bundle definitions. More information can be found here: https://operator-framework.github.io/operator-controller/api-reference/operator-controller-api-reference/#clustercatalog
clusterCatalog:
  enabled: true
  # Annotations to add to the cluster catalog
  annotations: {}
  spec:
    source:
      type: Image
      image:
        ref: docker.io/tytn/operator-catalog:2.7.0
        pollIntervalMinutes: 10

# This section is for the cluster extensions that describe how to deploy the operator. More information can be found here: https://operator-framework.github.io/operator-controller/api-reference/operator-controller-api-reference/#clusterextension
clusterExtension:
  enabled: false
  versions:
  # - name: inference-stack-operator-stable-v0
  #   annotations: {}
  #   spec:
  #     namespace: inference-stack-operator-system # namespace to deploy the operator into
  #     source:
  #       sourceType: Catalog # source type to use: https://operator-framework.github.io/operator-controller/api-reference/operator-controller-api-reference/#sourceconfig
  #       catalog:
  #         # catalog filter: https://operator-framework.github.io/operator-controller/api-reference/operator-controller-api-reference/#catalogfilter
  #         packageName: inference-stack-operator # name of the operator
  #         channels: [ "stable-v0" ] # channels to subscribe to
  # - name: inference-stack-operator-fast-v0
  #   annotations: {}
  #   spec:
  #     namespace: inference-stack-operator-system # namespace to deploy the operator into
  #     source:
  #       sourceType: Catalog # source type to use: https://operator-framework.github.io/operator-controller/api-reference/operator-controller-api-reference/#sourceconfig
  #       catalog:
  #         # catalog filter: https://operator-framework.github.io/operator-controller/api-reference/operator-controller-api-reference/#catalogfilter
  #         packageName: inference-stack-operator # name of the operator
  #         channels: [ "fast-v0" ] # channels to subscribe to

customResourceDefinition:
  enabled: true
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Schema for the Inference Stacks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Inference
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status defines the observed state of Inference Stack
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
