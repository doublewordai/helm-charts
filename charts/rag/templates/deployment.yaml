apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rag.fullname" $ }}-server
  labels:
    {{- include "rag.labels" $ | nindent 4 }}
    app.kubernetes.io/component: server
spec:
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "rag.fullname" $ }}
  template:
    metadata:
      labels:
        app: {{ include "rag.fullname" $ }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: server
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          env:
            {{- include "rag.serverBackendEnv" . | nindent 12 }}
          {{- with .Values.server.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.server.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.server.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.server.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          - name: helios-data
            mountPath: /tmp/data_store
          {{- with .Values.server.volumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        
        {{- if .Values.server.exportFeedback }}
        - name: feedback-exporter
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          command: ["python", "export_feedback.py"]
          env:
            {{- include "rag.serverBackendEnv" . | nindent 12 }}
          volumeMounts:
            - name: postgres-mongodb-feedback-exporter
              mountPath: /TakeoffRag/export_feedback.py
              subPath: export_feedback.py
        {{- end }}
      volumes:
      {{- if .Values.server.exportFeedback }}
      - name: postgres-mongodb-feedback-exporter
        configMap:
          name: postgres-mongodb-feedback-exporter
      {{- end }}
      - name: server-data
        {{- if not .Values.server.useDataCache }}
        emptyDir: {}
        {{- else }}
        persistentVolumeClaim:
          claimName: {{ include "rag.fullname" $ }}-server-data
        {{- end }}
      {{- with .Values.server.volumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
