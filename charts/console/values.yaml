# Default values for console.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""
# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
# If rbac is enabled on the cluster, create role & clusterrole for managing inference stacks & getting node info.
rbac:
  enabled: true

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
# This makes use of path rewriting rules available in nginx - to use another
# ingress type, either modify the annotations to give the same instruction to
# your ingress controller, or deploy the ingress separately.
ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host:
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# This section is for setting up the Inference Stack Custom Resource that is deployed and managed by the console. The crdVersion is
# the version of the Custom Resource Definition that is being used. The operatorVersion is the version of the operator that is being
# used to manage the Custom Resource. See the ../../CHANGELOG.md for more information on the versions.
inferenceStack:
  crdVersion: v1alpha1
  operatorVersion: v2
  exportPrometheusMetrics: false

backend:
  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicaCount: 1
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: tytn/zeus-backend
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "timtest3"
  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  # This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  ports:
    - name: http
      containerPort: 8000
      protocol: TCP

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 80
    annotations:

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    httpGet:
      path: /healthz
      port: http
  readinessProbe:
    httpGet:
      path: /healthz
      port: http

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

  env: []

frontend:
  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicaCount: 1
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: tytn/zeus-frontend
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  # This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  ports:
    - name: http
      containerPort: 3000
      protocol: TCP

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 80
    annotations:

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

  env: []

db:
  volumeSpec:
    accessModes: ["ReadWriteOnce"]
    resources:
      requests:
        storage: 1Gi

secret:
  generate: true
  name: zeus-secret
  # The keys in the secret in which each object is stored
  keys:
    dbUser: dbUser
    dbPassword: dbPassword

reverseproxy:
  enabled: true
  replicaCount: 1
  image:
    repository: tytn/zeus-reverseproxy
    tag: 0.4.6
    pullPolicy: IfNotPresent
  tls:
    privatekey: |
      -----BEGIN EC PRIVATE KEY-----
      MHcCAQEEINH7vZNj02CgM1NEFaAYT4sfmlimgH1f1KqTnEUVkiHeoAoGCCqGSM49
      AwEHoUQDQgAEax8OSRTFYjzojCJMNESvSL2r3UDo6rB4rXfa++1UwW14Az8xCtSG
      3M6hN/D6tHVh7dM7EZJcKj7LFFbbyviBFA==
      -----END EC PRIVATE KEY-----
    certificate: |
      -----BEGIN CERTIFICATE-----
      MIIDwTCCA0egAwIBAgISBRjou0NYGl6Z91NlQ6l42Tu2MAoGCCqGSM49BAMDMDIx
      CzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQDEwJF
      NjAeFw0yNTA0MTYxMzA1NDRaFw0yNTA3MTUxMzA1NDNaMCMxITAfBgNVBAMTGHRp
      dGFuLTMudGFpbDVlZjM1LnRzLm5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA
      BGsfDkkUxWI86IwiTDREr0i9q91A6OqweK132vvtVMFteAM/MQrUhtzOoTfw+rR1
      Ye3TOxGSXCo+yxRW28r4gRSjggJKMIICRjAOBgNVHQ8BAf8EBAMCB4AwHQYDVR0l
      BBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYE
      FL+Q53P4EHgaUwVwgt9pFcYT3f8cMB8GA1UdIwQYMBaAFJMnRpgDqVFojpjWxEJI
      2yO/WJTSMFUGCCsGAQUFBwEBBEkwRzAhBggrBgEFBQcwAYYVaHR0cDovL2U2Lm8u
      bGVuY3Iub3JnMCIGCCsGAQUFBzAChhZodHRwOi8vZTYuaS5sZW5jci5vcmcvMCMG
      A1UdEQQcMBqCGHRpdGFuLTMudGFpbDVlZjM1LnRzLm5ldDATBgNVHSAEDDAKMAgG
      BmeBDAECATAtBgNVHR8EJjAkMCKgIKAehhxodHRwOi8vZTYuYy5sZW5jci5vcmcv
      NTUuY3JsMIIBBQYKKwYBBAHWeQIEAgSB9gSB8wDxAHcAEvFONL1TckyEBhnDjz96
      E/jntWKHiJxtMAWE6+WGJjoAAAGWPuomvAAABAMASDBGAiEAhrVVHMhwIKavhtR1
      R56UxaC1w9dXsMQODCAApjYM0CsCIQDwTzaCoq1kmgm8BuU5ligCjIIuQf+dLVto
      TwENsR+6JAB2AK8YGijWjKPgqYpMnGerCfi7vCK6rryxOKOhndP5tgMNAAABlj7q
      Kk0AAAQDAEcwRQIhALDv0UgnMSYiFvklB2kktOiCSgIAMdGVPrRpmeSCIaZbAiBT
      wtzil8cDRTxU1dauu89Oju+hv4dKrWuaX5QOQaqy+zAKBggqhkjOPQQDAwNoADBl
      AjEAjHkcSrGs/dezXgYGYjbL/5CnKzQaBiFxtoWVoCjP3qmo2m4zjBMzPo1/B2D0
      JJRdAjB/CH62dUScj62cJdOx5oq9crnWInAcOPSJpMTQPfAZxXSaPY/br++9Da1U
      svaFVMk=
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIEVzCCAj+gAwIBAgIRALBXPpFzlydw27SHyzpFKzgwDQYJKoZIhvcNAQELBQAw
      TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
      cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjQwMzEzMDAwMDAw
      WhcNMjcwMzEyMjM1OTU5WjAyMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg
      RW5jcnlwdDELMAkGA1UEAxMCRTYwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAATZ8Z5G
      h/ghcWCoJuuj+rnq2h25EqfUJtlRFLFhfHWWvyILOR/VvtEKRqotPEoJhC6+QJVV
      6RlAN2Z17TJOdwRJ+HB7wxjnzvdxEP6sdNgA1O1tHHMWMxCcOrLqbGL0vbijgfgw
      gfUwDgYDVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcD
      ATASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBSTJ0aYA6lRaI6Y1sRCSNsj
      v1iU0jAfBgNVHSMEGDAWgBR5tFnme7bl5AFzgAiIyBpY9umbbjAyBggrBgEFBQcB
      AQQmMCQwIgYIKwYBBQUHMAKGFmh0dHA6Ly94MS5pLmxlbmNyLm9yZy8wEwYDVR0g
      BAwwCjAIBgZngQwBAgEwJwYDVR0fBCAwHjAcoBqgGIYWaHR0cDovL3gxLmMubGVu
      Y3Iub3JnLzANBgkqhkiG9w0BAQsFAAOCAgEAfYt7SiA1sgWGCIpunk46r4AExIRc
      MxkKgUhNlrrv1B21hOaXN/5miE+LOTbrcmU/M9yvC6MVY730GNFoL8IhJ8j8vrOL
      pMY22OP6baS1k9YMrtDTlwJHoGby04ThTUeBDksS9RiuHvicZqBedQdIF65pZuhp
      eDcGBcLiYasQr/EO5gxxtLyTmgsHSOVSBcFOn9lgv7LECPq9i7mfH3mpxgrRKSxH
      pOoZ0KXMcB+hHuvlklHntvcI0mMMQ0mhYj6qtMFStkF1RpCG3IPdIwpVCQqu8GV7
      s8ubknRzs+3C/Bm19RFOoiPpDkwvyNfvmQ14XkyqqKK5oZ8zhD32kFRQkxa8uZSu
      h4aTImFxknu39waBxIRXE4jKxlAmQc4QjFZoq1KmQqQg0J/1JF8RlFvJas1VcjLv
      YlvUB2t6npO6oQjB3l+PNf0DpQH7iUx3Wz5AjQCi6L25FjyE06q6BZ/QlmtYdl/8
      ZYao4SRqPEs/6cAiF+Qf5zg2UkaWtDphl1LKMuTNLotvsX99HP69V2faNyegodQ0
      LyTApr/vT01YPE46vNsDLgK+4cL6TrzC/a4WcmF5SRJ938zrv/duJHLXQIku5v0+
      EwOy59Hdm0PT/Er/84dDV0CSjdR/2XuZM3kpysSKLgD1cKiDA+IRguODCxfO9cyY
      Ig46v9mFmBvyH04=
      -----END CERTIFICATE-----

  service:
    type: ClusterIP
    annotations: {}
    ports:
      - port: 80
        targetPort: http
        protocol: TCP
        name: http

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  securityContext: {}
