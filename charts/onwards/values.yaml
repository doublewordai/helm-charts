fullnameOverride: ""
nameOverride: ""

# Onwards configuration, see https://github.com/doublewordai/onwards?tab=readme-ov-file#quickstart for more information.
targets: {}
# generate:
#   enabled: true
#   url: "http://doubleword-router-service.takeoff"
#   model: "google/gemma-3-12b-it"
auth:
  enabled: false
  # A list of global keys to use for authentication.
  globalKeys: []

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicas: 1
# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/doublewordai/onwards
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

ports:
- name: http
  containerPort: 3000
  protocol: TCP

env: []

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /v1/models
    port: 3000
  initialDelaySeconds: 30
  periodSeconds: 10
readinessProbe:
  httpGet:
    path: /v1/models
    port: 3000
  initialDelaySeconds: 5
  periodSeconds: 5

resources:
  requests:
    memory: "128Mi"
    cpu: "100m"
  limits:
    memory: "256Mi"
    cpu: "200m"

nodeSelector: {}

tolerations: []

affinity: {}

# Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

service:
  enabled: true
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3000

# Extra services to be deployed alongside the main deployment, for instance application load balancers
additionalServices: []

# This is for setting up the ingress resource more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  # className: nginx
  # rules:
  #   - host: doubleword.ai
  #     http:
  #       paths:
  #         - path: /*
  #           pathType: ImplementationSpecific
  #           backend:
  #             service:
  #               name: onwards
  #               port:
  #                 number: 80

# Metrics configuration - uses prometheus so relies on that already being installed into the cluster as will try to create a ServiceMonitor resource.
metrics:
  enabled: false
  port: 9090
  prefix: "onwards"
