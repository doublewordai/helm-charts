{{- $values := .Values }}
{{- if $values.controller.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: takeoff-controller-svc
spec:
  type: ClusterIP
  ports:
    - port: 3000
      protocol: TCP
      name: takeoff
    - port: 3001
      protocol: TCP
      name: management
    - port: 3003
      protocol: TCP
      name: api
    - port: 3005
      protocol: TCP
      name: internal
  selector:
    app: takeoff-controller
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: takeoff-controller
spec:
  serviceName: takeoff-controller
  replicas: {{ $values.controller.replicas }}
  selector:
    matchLabels:
      app: takeoff-controller
  template:
    metadata:
      labels:
        app: takeoff-controller
    spec:
      containers:
        - name: takeoff-controller
          image: tytn/takeoff-pro:{{ $values.takeoffVersion }}-cpu
          imagePullPolicy: Always
          ports:
            - name: takeoff
              containerPort: 3000
            - name: management
              containerPort: 3001
            - name: api
              containerPort: 3003
            - name: internal
              containerPort: 3005
          env:
            - name: TAKEOFF_INTERNAL_PORT
              value: "3005"
            - name: TAKEOFF_RESERVED_CONSUMERS
              value: {{ $values.controller.reservedConsumers }}
            - name: TAKEOFF_ADD_READER_ID_SUFFIX
              value: "true"

            {{- range $key, $value := $values.controller.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: liveness-check
              mountPath: /code/liveness-check.py
              subPath: liveness-check.py
          {{- with $values.controller }}
          resources:
            limits:
              {{- if .cpuLimit }} #Non-local only
              cpu: {{ .cpuLimit }}
              {{- end }}

              {{- if .memoryLimit }} #Non-local only
              memory: {{ .memoryLimit }}
              {{- end }}

              {{- if .ephemeralMemoryLimit }} #GCP only, kind of
              ephemeral-storage: {{ .ephemeralMemoryLimit }}
              {{- end }}


            {{- if not $values.disableResourceRequests }}
            requests:
              {{- if .cpuLimit }} #Non-local only
              cpu: {{ .cpuLimit }}
              {{- end }}

              {{- if .memoryLimit }} #Non-local only
              memory: {{ .memoryLimit }}
              {{- end }}

              {{- if .ephemeralMemoryLimit }} #GCP only, kind of
              ephemeral-storage: {{ .ephemeralMemoryLimit }}
              {{- end }}
            {{- end}}
          {{- end }}

          {{- with $values.controller }}

          {{- if .enableLivenessProbe}}

          livenessProbe:

            httpGet:
              path: /status
              port: 3000
            initialDelaySeconds: {{ ternary 90 .livenessPeriodSeconds (eq .livenessPeriodSeconds nil) }}
            periodSeconds: {{ ternary 5 .livenessPeriodSeconds (eq .livenessPeriodSeconds nil) }}
            timeoutSeconds: {{ ternary 10 .livenessTimeoutSeconds (eq .livenessTimeoutSeconds nil) }}
            failureThreshold:  {{ ternary 10 .livenessFailureThreshold (eq .livenessFailureThreshold nil) }}
          {{- end}}

          {{- if .enableStartupProbe}}

          startupProbe:
            httpGet:
              path: /status
              port: 3000
            periodSeconds: {{ ternary 1 .startupPeriodSeconds (eq .startupPeriodSeconds nil) }}
            successThreshold: {{ ternary 1 .startupSuccessThreshold (eq .startupSuccessThreshold nil) }}
            timeoutSeconds: {{ ternary 1 .startupTimeoutSeconds (eq .startupTimeoutSeconds nil) }}
            failureThreshold:  {{ ternary 60 .startupFailureThreshold (eq .startupFailureThreshold nil) }}
          {{- end}}
          {{- end}}
      imagePullSecrets:
        - name: takeoff-regcred
      volumes:
        - name: liveness-check
          configMap:
            name: takeoff-liveness-check
        - name: dshm
          emptyDir:
            medium: Memory
{{- end }}