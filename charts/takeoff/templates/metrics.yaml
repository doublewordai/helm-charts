{{- if .Values.enableMetrics }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: takeoff-dashboard
  labels:
    grafana_dashboard: "1"
data:
  takeoff-stack-dash.json: |-
{{ .Files.Get "dashboards/takeoff-stack-dash.json" | indent 4 }}
  takeoff-generate-dash.json: |-
{{ .Files.Get "dashboards/takeoff-generate-dash.json" | indent 4 }}

---
#ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
data:
  promtail.yaml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    clients:
    - url: {{ .Values.promtailLokiURL | default "http://takeoff-helm-loki-gateway.takeoff.svc.cluster.local:80/loki/api/v1/push"}}
      tenant_id: fish

    positions:
      filename: /tmp/positions.yaml
    target_config:
      sync_period: 10s
    scrape_configs:
    - job_name: pod-logs
      kubernetes_sd_configs:
        - role: pod
      pipeline_stages:
        - docker: {}
      relabel_configs:
        - source_labels:
            - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          replacement: $1
          separator: /
          source_labels:
            - __meta_kubernetes_namespace
            - __meta_kubernetes_pod_name
          target_label: job
        - action: replace
          source_labels:
            - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
            - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
            - __meta_kubernetes_pod_container_name
          target_label: container
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
          target_label: __path__
---
# ClusterRole

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail-clusterrole
rules:
  - apiGroups: [""]
    resources:
    - nodes
    - services
    - pods
    verbs:
    - get
    - watch
    - list

---

#DaemonSet

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail-daemonset
spec:
  selector:
    matchLabels:
      name: promtail
  template:
    metadata:
      labels:
        name: promtail
    spec:
      serviceAccount: promtail-serviceaccount
      containers:
      - name: promtail-container
        image: grafana/promtail
        args:
        - -config.file=/etc/promtail/promtail.yaml
        env:
        - name: 'HOSTNAME' # needed when using kubernetes_sd_configs
          valueFrom:
            fieldRef:
              fieldPath: 'spec.nodeName'
        volumeMounts:
        - name: logs
          mountPath: /var/log
          readOnly: true
        - name: promtail-config
          mountPath: /etc/promtail/promtail.yaml
          subPath: promtail.yaml
        {{- if .Values.mountDockerContainers }}
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        {{- end }}
      volumes:
      - name: logs
        hostPath:
          path: /var/log
      {{- if .Values.mountDockerContainers }}
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      {{- end }}
      - name: promtail-config
        configMap:
          name: promtail-config

---
#RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail-clusterrolebinding
subjects:
    - kind: ServiceAccount
      name: promtail-serviceaccount
      namespace: {{ .Release.Namespace }}
roleRef:
    kind: ClusterRole
    name: promtail-clusterrole
    apiGroup: rbac.authorization.k8s.io
---
#ServiceAccount

apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail-serviceaccount
---
apiVersion: v1
kind: Secret
metadata:
  name: prometheus-additional-scrape-config
stringData:
  prometheus-additional-scrape-config.yaml: |
    - job_name: takeoff-controller
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_pod_name]
          action: keep
          regex: 'takeoff-controller-.*'
        - source_labels: [__meta_kubernetes_pod_container_port_number]
          regex: '3001'
          action: keep
      scrape_interval: 1s

    - job_name: nvidia_exporter
      kubernetes_sd_configs:
        - role: endpoints
      relabel_configs:
        - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_namespace]
          action: keep
          regex: nvidia-dcgm-exporter;.*  # Match 'nvidia-dcgm-exporter' service in any namespace
      metrics_path: /metrics
      scrape_interval: 1s


{{- end }}