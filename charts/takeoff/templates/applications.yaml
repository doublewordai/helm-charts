{{- range $appName, $baseValues := .Values.applications }}
  {{/* First, deep copy the application template */}}
  {{- $mergedValues := deepCopy $.Values.applicationTemplate }}
  
  {{/* Special handling for modelsVolume - if it exists in the app config, preserve it for later complete replacement */}}
  {{- $appModelsVolume := dict }}
  {{- if hasKey $baseValues "modelsVolume" }}
    {{- $appModelsVolume = deepCopy $baseValues.modelsVolume }}
    {{- $baseValues = omit $baseValues "modelsVolume" }}
  {{- end }}
  
  {{/* Merge application values into template */}}
  {{- $mergedValues = mustMergeOverwrite $mergedValues $baseValues }}
  
  {{/* If app-specific modelsVolume was provided, completely replace the template value */}}
  {{- if not (empty $appModelsVolume) }}
    {{- $_ := set $mergedValues "modelsVolume" $appModelsVolume }}
  {{- end }}

  {{/* Set the required env vars needed for each application deployment */}}
  {{- $requiredEnv := list }}
  {{- $requiredEnv = append $requiredEnv (dict "name" "TAKEOFF_ADD_READER_ID_SUFFIX" "value" "true") }}
  {{- $requiredEnv = append $requiredEnv (dict "name" "TAKEOFF_HEADLESS" "value" "true") }}

  {{/* Process template env */}}
  {{- $templateEnv := list }}
  {{- $templateEnv = concat $templateEnv $.Values.applicationTemplate.env }}

  {{/* Process app-specific env */}}
  {{- $appEnv := list }}
  {{- if hasKey $baseValues "env" }}
    {{- $appEnv = $baseValues.env }}
  {{- end }}

  {{/* Create combined env list with overrides */}}
  {{- $allNames := dict }}
  {{- $applicationEnv := list }}
  
  {{/* First add app-specific env (highest priority) */}}
  {{- range $envMap := $appEnv }}
    {{- $applicationEnv = append $applicationEnv $envMap }}
    {{- $_ := set $allNames $envMap.name true }}
  {{- end }}
  
  {{/* Then add template env if not already added */}}
  {{- range $envMap := $templateEnv }}
    {{- if not (hasKey $allNames $envMap.name) }}
      {{- $applicationEnv = append $applicationEnv $envMap }}
      {{- $_ := set $allNames $envMap.name true }}
    {{- end }}
  {{- end }}
  
  {{/* Finally add required env if not already added */}}
  {{- range $envMap := $requiredEnv }}
    {{- if not (hasKey $allNames $envMap.name) }}
      {{- $applicationEnv = append $applicationEnv $envMap }}
      {{- $_ := set $allNames $envMap.name true }}
    {{- end }}
  {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "takeoff.fullname" $ }}-{{ $appName }}
  labels:
    app.kubernetes.io/component: application-{{ $appName }}
    {{- include "takeoff.labels" $ | nindent 4 }}
data:
  config.yaml: |
    takeoff:
      server_config:
        internal_port: 3005
      readers_config:
        {{ $appName }}:
          {{- $readerConfigTemplate := printf `
          internalGatewayIp: %s-controller
          ` (include "takeoff.fullname" $) }}
          {{- $templateReaderConfig := fromYaml $readerConfigTemplate }}
          {{- $finalReadersConfig := merge $mergedValues.readerConfig $templateReaderConfig }}
          {{- range $key, $value := $finalReadersConfig }}
          {{ snakecase $key }}: {{ $value }}
          {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "takeoff.fullname" $ }}-{{ $appName }}
  labels:
    app.kubernetes.io/component: application-{{ $appName }}
    {{- include "takeoff.labels" $ | nindent 4 }}
spec:
  {{- if not $mergedValues.scaling.enabled }}
  replicas: {{ $mergedValues.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/component: application-{{ $appName }}
      {{- include "takeoff.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      {{- with $mergedValues.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/component: application-{{ $appName }}
        {{- include "takeoff.labels" $ | nindent 8 }}
        {{- with $mergedValues.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "takeoff.serviceAccountName" $ }}
      {{- with $mergedValues.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: models-cache-manager
          image: busybox
          command: ["sh", "-c", "chmod -R 777 /models"]
          volumeMounts:
          - mountPath: /models
            name: {{ $mergedValues.modelsVolume.name }}
      containers:
        - name: {{ include "takeoff.fullname" $ }}-{{ $appName }}
          {{- with $mergedValues.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ $mergedValues.image.repository }}:{{ $mergedValues.image.tag | default (print $.Chart.AppVersion "-gpu") }}"
          imagePullPolicy: {{ $mergedValues.image.pullPolicy }}
          env:
            {{ $applicationEnv | toYaml | nindent 12 }}
          {{- with $mergedValues.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $mergedValues.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $mergedValues.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $mergedValues.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /code/config.yaml
              subPath: config.yaml
            - name: dshm
              mountPath: /dev/shm
            - name: {{ $mergedValues.modelsVolume.name }}
              mountPath: /code/models
          {{- with $mergedValues.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "takeoff.fullname" $ }}-{{ $appName }}
        - name: dshm
          emptyDir:
            medium: Memory
        - {{- $mergedValues.modelsVolume | toYaml | nindent 10 }}
      {{- with $mergedValues.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $mergedValues.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $mergedValues.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $mergedValues.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- if $mergedValues.scaling.enabled }}
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: {{ include "takeoff.fullname" $ }}-{{ $appName }}
  labels:
    app.kubernetes.io/component: application-{{ $appName }}
    {{- include "takeoff.labels" $ | nindent 4 }}
  {{- with $mergedValues.scaling.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- $scaledObjectTemplate := printf `
scaleTargetRef:
  apiVersion: apps/v1
  kind: Deployment
  name: %s-%s
` (include "takeoff.fullname" $) $appName }}
{{- $templateScalingSpec := fromYaml $scaledObjectTemplate }}

{{- $consumerGroupKey := printf "target_%s" $mergedValues.readerConfig.consumerGroup }}
{{- $serviceName := printf "%s-%s" (include "takeoff.fullname" $) $appName }}
{{- $scalerAddress := printf "%s-controller.%s.svc.cluster.local:3005" (include "takeoff.fullname" $) $.Release.Namespace}}
{{- $target := (toString $mergedValues.scaling.metricTarget.value)}}

{{- $triggers := list }}
  {{- $trigger := dict "type" "external-push" "metadata" (dict "scalerAddress" $scalerAddress $consumerGroupKey $target) }}
  {{- $triggers = append $triggers $trigger }}

{{- $specWithoutMetricTarget := omit $mergedValues.scaling.spec "metricTarget" }}
{{- $specWithTriggers := merge $specWithoutMetricTarget (dict "triggers" $triggers) }}
{{- $finalScalingSpec := merge $specWithTriggers $templateScalingSpec }}

spec:
  {{- toYaml $finalScalingSpec | nindent 2 }}
---
{{- end }}
{{- end }}
# End range over applications
